(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const t of document.querySelectorAll('link[rel="modulepreload"]'))r(t);new MutationObserver(t=>{for(const s of t)if(s.type==="childList")for(const o of s.addedNodes)o.tagName==="LINK"&&o.rel==="modulepreload"&&r(o)}).observe(document,{childList:!0,subtree:!0});function a(t){const s={};return t.integrity&&(s.integrity=t.integrity),t.referrerPolicy&&(s.referrerPolicy=t.referrerPolicy),t.crossOrigin==="use-credentials"?s.credentials="include":t.crossOrigin==="anonymous"?s.credentials="omit":s.credentials="same-origin",s}function r(t){if(t.ep)return;t.ep=!0;const s=a(t);fetch(t.href,s)}})();const i={API_URL:"https://script.google.com/macros/s/AKfycbx4ceoareWUSpRbbIuf6wrXjxuERw739GYnOlNtqZ_qu_N_y8Q98IRCAyxZao3sD8BkWg/exec",ATM_LOCATIONS:[{value:"Benhur-F",label:"Benhur F"},{value:"Dinesh-Kumar",label:"Dinesh Kumar"},{value:"Harish-KS",label:"Harish KS"},{value:"Sivakumar-Kotipatruni",label:"Sivakumar Kotipatruni"}],ADMIN_USERNAME:"admin",ADMIN_PASSWORD:"DRAW@2025",TICKET_MIN:101,TICKET_MAX:499,STATS_UPDATE_INTERVAL:5e3,DRAW_ANIMATION:{SPIN_DURATION:5e3,SLOWDOWN_DURATION:2e3,SPIN_INTERVAL:100,SLOW_INTERVAL:300}},h={EMPLOYEE_ID:/^\d{9}$/,EMPLOYEE_NAME:/^[A-Za-z\s]+$/},n={REGISTER:"register",GET_STATS:"getStats",GET_WINNERS:"getWinners",DRAW_WINNER:"drawWinner",CHECK_STATUS:"checkStatus"};class u{constructor(){this.baseURL=i.API_URL,this.mockData={registrations:[],winners:[]}}useMockData(){return!this.baseURL||i.USE_MOCK_DATA}generateMockTicket(){const e=new Set(this.mockData.registrations.map(r=>r.ticketNumber));let a;do a=Math.floor(Math.random()*(i.TICKET_MAX-i.TICKET_MIN+1))+i.TICKET_MIN;while(e.has(a));return a}async makeRequest(e,a={}){try{const r=await fetch(e,{...a,mode:"cors",credentials:"omit",redirect:"follow"});if(!r.ok)throw new Error(`HTTP error! status: ${r.status}`);return await r.json()}catch(r){throw r.message.includes("CORS")||r.message.includes("Failed to fetch")?(console.warn("⚠️ CORS error detected. Falling back to mock data mode."),console.warn("To fix: Redeploy Google Apps Script with correct settings (see instructions below)"),new Error("CORS_ERROR")):r}}async registerTrainer(e,a,r){if(this.useMockData()){console.warn("⚠️ Using mock data. Configure API_URL in .env or src/config.js for real backend.");const t=this.mockData.registrations.find(o=>o.employeeId===e);if(t)return{success:!1,message:"Already enrolled",alreadyRegistered:!0,ticketNumber:t.ticketNumber,status:t.status,employeeName:t.employeeName,atmLocation:t.atmLocation};const s=this.generateMockTicket();return this.mockData.registrations.push({employeeId:e,employeeName:a,atmLocation:r,ticketNumber:s,status:"Active",timestamp:new Date().toISOString()}),{success:!0,message:"Registration successful",ticketNumber:s}}try{return await this.makeRequest(this.baseURL,{method:"POST",headers:{"Content-Type":"text/plain;charset=utf-8"},body:JSON.stringify({action:n.REGISTER,employeeId:e,employeeName:a,atmLocation:r})})}catch(t){if(t.message==="CORS_ERROR")return console.warn("🔄 Automatically switching to mock data mode due to CORS issue."),i.USE_MOCK_DATA=!0,this.registerTrainer(e,a,r);throw console.error("Registration error:",t),t}}async getStats(){if(this.useMockData()){const e={"Benhur-F":0,"Dinesh-Kumar":0,"Harish-KS":0,"Sivakumar-Kotipatruni":0};return this.mockData.registrations.forEach(a=>{e.hasOwnProperty(a.atmLocation)&&e[a.atmLocation]++}),{success:!0,message:"Stats retrieved",total:this.mockData.registrations.length,atmCounts:e}}try{return await this.makeRequest(`${this.baseURL}?action=${n.GET_STATS}`)}catch(e){if(e.message==="CORS_ERROR")return i.USE_MOCK_DATA=!0,this.getStats();throw console.error("Get stats error:",e),e}}async getWinners(){if(this.useMockData())return{success:!0,message:"Winners retrieved",winners:this.mockData.winners};try{return await this.makeRequest(`${this.baseURL}?action=${n.GET_WINNERS}`)}catch(e){if(e.message==="CORS_ERROR")return i.USE_MOCK_DATA=!0,this.getWinners();throw console.error("Get winners error:",e),e}}async drawWinner(){if(this.useMockData()){const e=this.mockData.registrations.filter(s=>s.status==="Active");if(e.length===0)return{success:!1,message:"No eligible participants for the draw"};const a=Math.floor(Math.random()*e.length),r=e[a],t=this.mockData.registrations.find(s=>s.ticketNumber===r.ticketNumber);return t.status="Winner",this.mockData.winners.push({...r,drawDate:new Date().toISOString()}),{success:!0,message:"Winner selected",winner:r}}try{return await this.makeRequest(this.baseURL,{method:"POST",headers:{"Content-Type":"text/plain;charset=utf-8"},body:JSON.stringify({action:n.DRAW_WINNER})})}catch(e){if(e.message==="CORS_ERROR")return i.USE_MOCK_DATA=!0,this.drawWinner();throw console.error("Draw winner error:",e),e}}async checkRegistrationStatus(){if(this.useMockData())return{success:!0,message:"Status retrieved",isOpen:!0};try{return await this.makeRequest(`${this.baseURL}?action=${n.CHECK_STATUS}`)}catch(e){if(e.message==="CORS_ERROR")return i.USE_MOCK_DATA=!0,this.checkRegistrationStatus();throw console.error("Check status error:",e),e}}}const l=new u;export{i as C,h as V,l as a};
